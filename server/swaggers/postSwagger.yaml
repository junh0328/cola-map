paths:
  /post:
    post:
      tags:
        - post
      summary: 제보 작성
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                store:
                  type: string
                storeName:
                  type: string
                kakaoId:
                  type: string
                addressX:
                  type: number
                addressY:
                  type: number
                drink:
                  type: string
                comment:
                  type: string
            examples:
              store does not exists:
                summary: store does not exists
                value:
                  storeName: BHC 상암동
                  kakaoId: 123456
                  addressX: 123.456
                  addressY: 123.456
                  drink: 코카콜라
                  comment: 코카콜라가 왔어요 !
              store alreay exists:
                summary: store alreay exists
                value:
                  store: 123456
                  drink: 코카콜라
                  comment: 코카콜라가 왔어요 !
      security:
        - bearerAuth: []
      responses:
        '201':
          description: OK

  /post/store/{storeId}:
    get:
      tags:
        - post
      summary: 특정 스토어의 제보 조회
      parameters:
        - in: path
          name: storeId
          description: 'store 객체의 kakaoId 값'
          required: true
          schema:
            type: string
            default: '123456'
      responses:
        '200':
          description: OK

  /post/user:
    get:
      tags:
        - post
      summary: 내가 한 제보 조회
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK

  /post/{postId}:
    get:
      tags:
        - get
      summary: 내가 한 제보 수정 - 수정 페이지
      parameters:
        - in: path
          name: postId
          description: 'post 객체의 _id 값'
          required: true
          schema:
            type: string
            default: '61066341d222d41ac82f31b3'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '400':
          description: ERROR
        '401':
          description: 로그인 필요
    patch:
      tags:
        - get
      summary: 내가 한 제보 수정 - 데이터 전송
      parameters:
        - in: path
          name: postId
          description: 'post 객체의 _id 값'
          required: true
          schema:
            type: string
            default: '60fd6662d2d2c52f2033c79e'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                drink:
                  type: string
                  default: 'coca/pepsi 중 선택해주세요'
                comment:
                  type: string
                  default: '내용을 입력해주세요'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '400':
          description: ERROR
        '401':
          description: 로그인 필요
    delete:
      tags:
        - post
      summary: 내가 한 제보 삭제
      parameters:
        - in: path
          name: postId
          description: 'post 객체의 _id 값'
          required: true
          schema:
            type: string
            default: '60fd6662d2d2c52f2033c79e'
      security:
        - bearerAuth: []
      responses:
        '204':
          description: OK
